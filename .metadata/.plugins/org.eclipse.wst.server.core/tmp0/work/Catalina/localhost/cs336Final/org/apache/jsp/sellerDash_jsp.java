/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.93
 * Generated at: 2019-04-12 23:27:13 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.cs336.pkg.*;
import java.io.*;
import java.util.*;
import java.sql.*;
import javax.servlet.http.*;
import javax.servlet.*;

public final class sellerDash_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"css/index.css\"/>\n");
      out.write("<title>Seller dash</title>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<h1>Seller Dashboard</h1>\n");

try {
ApplicationDB db = new ApplicationDB();	
Connection con = db.getConnection();
Statement stmt = con.createStatement();
String email_username = ""+session.getAttribute("username"); //"jack@gmail.com";
out.println(email_username);
String str = "SELECT email FROM Seller WHERE email=" + "'"+email_username+"';" ;
ResultSet result = stmt.executeQuery(str);
if(result.next()){
String email = result.getString("email");
con.close();
if(email.equals(email_username)){
out.println("<h2>Welcome Seller! Sell some items please!</h2>");
out.println("<br>");
out.println("<br>");
out.println("<b>Items you have put up for auction</b>");
out.println("<br>");
out.println("<br>");
out.println("<table border='4'><tr><th>Jewelry Name</th><th>Current Bidding Amount $</th><th>Closing Date/Time</th></tr>");
con = db.getConnection();
stmt = con.createStatement();
str = "SELECT j.name, j.jewelryID, iob.closingDate FROM infoOfBid as iob join jewelry as j on j.jewelryID = iob.jewelryID WHERE emailOfSeller = '" + email_username + "';";
result = stmt.executeQuery(str);
while(result.next()){
	
int id= result.getInt("j.jewelryID");
String name = result.getString("j.name");
String closingDate = result.getString("iob.closingDate");
String str2 = "SELECT cb.cost from CurrentBid as cb join jewelry as j on cb.jewelryID = j.jewelryID WHERE j.jewelryID = " + id;
String currentCost = "This item has no bids";
Statement stmt2 = con.createStatement();
ResultSet result2 = stmt2.executeQuery(str2);
	
if(result2.next()){
	
currentCost = result2.getString("cb.cost");
} 
out.print("<tr><th><a href='jewelryPage.jsp?id=" + id + "'>" +name + "</a></th>");
out.print("<th> $"+ currentCost + "</th>");
out.print("<th>"+ closingDate + "</th></tr>");
}
out.print("</table>");
con.close();

      out.write("\n");
      out.write("<br>\n");
      out.write("<br>\n");
      out.write("<b>EMAIL FROM BUYME</b>\n");
      out.write("<br>\n");
      out.write("<br>\n");
      out.write("<table border='4'>\n");
      out.write("<tr>\n");
      out.write("<td>Type Of notification</td>\n");
      out.write("<td>ID of jewelry</td>\n");
      out.write("<td>Content</td>\n");
      out.write("<td>Time</td>\n");
      out.write("</tr>\n");

Connection con1 = db.getConnection();
Statement stmt3 = con1.createStatement();
	 
str = "SELECT name, id, content, timeOF FROM auctionInfo WHERE email='"+session.getAttribute("username")+"'";
ResultSet result2 = stmt3.executeQuery(str);
while(result2.next()){
String name = result2.getString("name");
String id = result2.getString("id");
String content = result2.getString("content");
String time = result2.getString("timeOF");
out.print("<tr><th>" +name + "</th>");
out.print("<th>" + id +"</th>");
out.print("<th>"+content + "</th>");
out.print("<th>"+time+"</th></tr>");    
}

      out.write("\n");
      out.write("</table>\n");
      out.write("<br>\n");
      out.write("<br>\n");


out.println("<p><a href='auction.jsp'>Put an item up for auction!</a><p>");
			
con1.close();
}
}
else{
out.println("<h1>Sorry you do not have access to this page unless you become a seller</h1>");
out.println("<p><a href='becomeSeller.jsp'>Click this to become a seller as well</a></p>");
	
}
}
catch (Exception ex) {
out.println(ex);
out.println("error");
}

      out.write("\n");
      out.write("\n");
      out.write("<p><a href='dash.jsp'>Click this link for the basic dashboard</a></p>\n");
      out.write("<p><a href='sellerHistory.jsp'>Click to see your seller history</a></p>\n");
      out.write("<p><a href='logout.jsp'>Log out</a></p>\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
