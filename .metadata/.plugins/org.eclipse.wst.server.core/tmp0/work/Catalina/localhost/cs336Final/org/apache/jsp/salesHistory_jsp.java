/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.93
 * Generated at: 2019-04-12 18:34:26 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.cs336.pkg.*;
import java.io.*;
import java.util.*;
import java.sql.*;
import java.lang.*;
import javax.servlet.http.*;
import javax.servlet.*;

public final class salesHistory_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n");
      out.write("<html>\n");
      out.write(" <head>\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"css/index.css\"/>\n");
      out.write("<title>Sales Report</title>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<h1 align=\"left\">Sales History</h1>\n");
      out.write("\t");
double earnings = 0.0; 
      out.write("\n");
      out.write("<form method =\"post\">\n");
try {
	
	ApplicationDB db = new ApplicationDB();	
	Connection con = db.getConnection();
	Statement stmt = con.createStatement();
	
	String requested = request.getParameter("sales");
	if(requested.equals("1") == true)
	{
		String q = "SELECT SUM(cost) 'Total Earnings' FROM Sold;";
		ResultSet result = stmt.executeQuery(q);
		if(result.next()){
      out.write("\n");
      out.write("\t\t\t<h3>Total Earnings</h3>\n");
      out.write("\t\t\t<table align=\"center\" border=\"3\">\n");
      out.write("\t\t\t<tr>\n");
      out.write("\t\t\t\t<th>Total Earnings</th>\n");
      out.write("\t\t\t</tr>");

			
				do{
      out.write("\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t<tr>\n");
      out.write("\t\t\t\t<td align = \"center\">");
 out.println(String.format("$%.2f",result.getFloat("Total Earnings")));
      out.write("</td>\n");
      out.write("\t\t\t\t</tr>");

				}while(result.next());
      out.write("\n");
      out.write("\t\t\t</table>");

		}
		
		else{
			out.println("NO EARNINGS TO SHOW!");
		}
	}
	
	else if(requested.equals("2") == true)
	{
		String q = "SELECT s.jewelryID, j.brand, j.name, SUM(s.cost) FROM Sold s, jewelry j where j.jewelryID = s.jewelryID GROUP BY s.jewelryID order by SUM(s.cost) DESC;";
		ResultSet result = stmt.executeQuery(q);
		if(result.next()){
      out.write("\n");
      out.write("\t\t\t<h3>Earnings Per Jewelry</h3>\n");
      out.write("\t\t\t<table border =\"3\" align = \"center\">\n");
      out.write("\t\t<tr>\n");
      out.write("\t\t\t<th>JID</th>\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t<th>Brand Name</th>\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t<th>Jewelry Name</th>\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t<th>Total Earnings</th>\n");
      out.write("\t\t\t\n");
      out.write("\t\t</tr>");

				do{
      out.write("\n");
      out.write("\t\t\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t\t<td align = \"center\">");
 out.println(result.getString("s.jewelryID"));
      out.write("</td>\n");
      out.write("\t\t\t\t\t\t<td align = \"center\">");
 out.println(result.getString("j.brand"));
      out.write("</td>\n");
      out.write("\t\t\t\t\t\t<td align = \"center\">");
 out.println(result.getString("j.name"));
      out.write("</td>\n");
      out.write("\t\t\t\t\t\t<td align = \"center\">");
 out.println(String.format("$%.2f",result.getFloat("SUM(s.cost)")));
      out.write("</td>\n");
      out.write("\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t</tr>");

				}while(result.next());
      out.write("\n");
      out.write("\t\t\t</table>");

		}
		
		else{
			out.println("NO ITEMS TO SHOW!");
		}
	}
	
	else if(requested.equals("3") == true)
	{
		String q = "SELECT s.type, SUM(s.cost) FROM Sold s GROUP BY s.type;";
		ResultSet result = stmt.executeQuery(q);
		if(result.next()){
      out.write("\n");
      out.write("\t\t\t<h3>Earnings Per Types of Jewelry</h3>\n");
      out.write("\t\t\t<table align=\"center\" border=\"3\">\n");
      out.write("\t\t\t<tr>\n");
      out.write("\t\t\t\t<th>Jewelry Type</th>\n");
      out.write("\t\t\t\t<th>Earnings</th>\n");
      out.write("\t\t\t</tr>");

			
			do{
      out.write("\n");
      out.write("\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t<td align = \"center\">");
 out.println(result.getString("s.type"));
      out.write("</td>\n");
      out.write("\t\t\t\t\t<td align = \"center\">");
 out.println(String.format("$%.2f",result.getFloat("SUM(s.cost)")));
      out.write("</td>\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t\t</tr>");

			}while(result.next());
      out.write("\n");
      out.write("\t\t\t</table>");

		}
		
		else{
			out.println("NO ITEMS TO SHOW!");
		}
	}
	
	else if(requested.equals("4") == true)
	{
		String q = "SELECT email, SUM(cost) FROM Sold GROUP BY email order by email;";
		ResultSet result = stmt.executeQuery(q);
		if(result.next()){
      out.write("\n");
      out.write("\t\t\t<h3>Earnings Per Seller</h3>\n");
      out.write("\t\t\t<table align=\"center\" border=\"3\">\n");
      out.write("\t\t\t<tr>\n");
      out.write("\t\t\t\t<th>Seller</th>\n");
      out.write("\t\t\t\t<th>Earnings</th>\n");
      out.write("\t\t\t</tr>");

			
			do{
      out.write("\n");
      out.write("\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t<td align = \"center\">");
 out.println(result.getString("email"));
      out.write("</td>\n");
      out.write("\t\t\t\t\t<td align = \"center\">");
 out.println(String.format("$%.2f",result.getFloat("SUM(cost)")));
      out.write("</td>\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t\t</tr>");

			}while(result.next());
      out.write("\n");
      out.write("\t\t\t</table>");

		}
		
		else{
			out.println("NO ITEMS TO SHOW!");
		}
	}
	
	else if(requested.equals("5") == true)
	{
		String q = "SELECT s.jewelryID,j.name, COUNT(s.color), SUM(s.cost) FROM Sold s, jewelry j where j.jewelryID = s.jewelryID GROUP BY s.jewelryID order by SUM(s.cost) DESC;";
		ResultSet result = stmt.executeQuery(q);
		if(result.next()){
      out.write("\n");
      out.write("\t\t<h3>Best Selling Jewelry</h3>\n");
      out.write("\t\t<table border =\"3\" align = \"center\">\n");
      out.write("\t\t<tr>\n");
      out.write("\t\t\t<th>JID</th>\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t<th>Jewelry Name</th>\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t<th>Quantity</th>\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t<th>Total Earnings</th>\n");
      out.write("\t\t\t\n");
      out.write("\t\t</tr>");

				do{
      out.write("\n");
      out.write("\t\t\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t\t<td align = \"center\">");
 out.println(result.getString("s.jewelryID"));
      out.write("</td>\n");
      out.write("\t\t\t\t\t\t<td align = \"center\">");
 out.println(result.getString("j.name"));
      out.write("</td>\n");
      out.write("\t\t\t\t\t\t<td align = \"center\">");
 out.println(result.getInt("COUNT(s.color)"));
      out.write("</td>\n");
      out.write("\t\t\t\t\t\t<td align = \"center\">");
 out.println(String.format("$%.2f",result.getFloat("SUM(s.cost)")));
      out.write("</td>\n");
      out.write("\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t</tr>");

				}while(result.next());
      out.write("\n");
      out.write("\t\t\t</table>");

		}
	}
	
	else if(requested.equals("6") == true)
	{
		String q = "SELECT b.email'Buyer_Email', COUNT(b.email)'Bids_Bought', SUM(s.cost)'amount_spent' FROM Buyer b, Sold as s where b.email = s.email GROUP BY Buyer_Email order by amount_spent DESC;";
		ResultSet result = stmt.executeQuery(q);
		if(result.next())
		{
      out.write("\n");
      out.write("\t\t<h3>Best Buyer</h3>\n");
      out.write("\t\t<table border =\"3\" align = \"center\";>\n");
      out.write("\t\t<tr>\n");
      out.write("\t\t\t<th>Buyer Email</th>\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t<th>Number of Bought Bids</th>\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t<th>Amount spent</th>\n");
      out.write("\t\t\t\n");
      out.write("\t\t</tr>");
 
				do 
				{
      out.write("\n");
      out.write("\t\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t<td>");
 out.println(result.getString("Buyer_Email"));
      out.write("</td>\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\t<td align = \"center\">");
out.println(result.getInt("Bids_Bought"));
      out.write("</td>\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\t<td align = \"center\">");
out.println(String.format("$%.2f",result.getFloat("amount_spent")));
      out.write("</td>\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\t</tr>");

				} while (result.next());
      out.write("\n");
      out.write("\t\t\t</table>");

		}
		else{
			out.println("NO EARNINGS TO SHOW!");
		}
		
	}
	else
	{
		out.println("No sales");
	}
	con.close();
}
catch (Exception ex)
{
out.println(ex);
out.println("error");
}

      out.write("</form>\n");
      out.write("<p><br /></p>\n");
      out.write("<p><br /></p>\n");
      out.write("<p><a href='administrativeStaffPage.jsp'>Click this link for more sale reports</a></p>\n");
      out.write("<p><a href='logout.jsp'>Log out</a></p>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
