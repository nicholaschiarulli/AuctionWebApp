/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.93
 * Generated at: 2019-03-23 20:17:16 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.cs336.pkg.*;
import java.io.*;
import java.util.*;
import java.sql.*;
import javax.servlet.http.*;
import javax.servlet.*;

public final class registerPage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\n");
      out.write("<title>RP</title>\n");
      out.write("</head>\n");
      out.write("<body>\n");

try {
ApplicationDB db = new ApplicationDB();	
Connection con = db.getConnection();
Statement stmt = con.createStatement();
String firstParam = request.getParameter("firstName");
String lastParam = request.getParameter("lastName");
String emailParam = request.getParameter("email");
String passwordParam = request.getParameter("password");
String passwordConfirmParam = request.getParameter("passwordConfirm");
String sellerParam = request.getParameter("seller"); 
if (emailParam.isEmpty() || passwordParam.isEmpty()){
out.print("<p>Password or email field was empty. Please fill both in.</P>");
} 
else if (passwordParam.equals(passwordConfirmParam)) {
String insert1 = "INSERT INTO customer values (?, ?, ?, ?);";
PreparedStatement ps = con.prepareStatement(insert1);
ps.setString(1, emailParam);
ps.setString(2, firstParam);
ps.setString(3, lastParam);
ps.setString(4, passwordParam);
//ps.setString(5, sellerParam);
out.print(sellerParam);
ps.executeUpdate();
				
if(sellerParam.equals("yes")){
String insert2 = "INSERT INTO Seller values (?);";
PreparedStatement ps1 = con.prepareStatement(insert2);
ps1.setString(1, emailParam);
//ps.setString(5, sellerParam);
//out.print(sellerParam);
ps1.executeUpdate();
	}	
else{
String insert3 = "INSERT INTO Buyer values (?);";
PreparedStatement ps2 = con.prepareStatement(insert3);
ps2.setString(1, emailParam);
//ps.setString(5, sellerParam);
//out.print(sellerParam);
ps2.executeUpdate();
					
}
				
out.print("<p>Customer account has now been created</p>");
response.sendRedirect("index.jsp");
} 
else {
out.print("<p>Password does not match confirm password field</P>");
}	
			
con.close();
			
} catch (Exception ex) {
}

      out.write("\n");
      out.write("<form method=\"post\" action=\"index.jsp\">\n");
      out.write("<input type=\"submit\" value=\"Back to register page\" class=\"button\">\n");
      out.write("</form>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
